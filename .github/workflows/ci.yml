name: Qwik CI

on:
  push:
  pull_request:
    branches:
      - main
  workflow_dispatch:
    name: 'Release'
    description: 'Publish to NPM, and create a Github release.'
    inputs:
      disttag:
        description: 'Workflow will publish to NPM, push the git tag and create a Github release. Enter the NPM Dist Tag to use, such as: latest, next, dev.'
        required: true
        default: 'latest'

env:
  # Disable incremental build, speeds up CI
  CARGO_INCREMENTAL: 0

jobs:
  ############ BUILD PACKAGE ############
  build-package:
    name: Build Package
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    runs-on: ubuntu-latest
    steps:
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 16.x
          registry-url: https://registry.npmjs.org/

      - name: Checkout
        uses: actions/checkout@v2

      - name: Cache NPM Dependencies
        uses: actions/cache@v2
        with:
          path: node_modules
          key: npm-cache-${{ runner.os }}-${{ hashFiles('yarn.lock') }}

      - name: Install NPM Dependencies
        run: yarn install --frozen-lockfile --registry https://registry.npmjs.org --network-timeout 300000

      - name: Build Package
        run: node scripts --tsc --build --api --set-dist-tag="${{ github.event.inputs.disttag }}"

      - name: Print WASM Dist Build
        run: ls -R dist-dev/@builder.io-qwik/

      - name: Upload Package Build Artifacts
        uses: actions/upload-artifact@master
        with:
          name: dist-dev-builder-io-qwik
          path: dist-dev/@builder.io-qwik/
          if-no-files-found: error

  ############ BUILD WASM ############
  build-wasm:
    name: Build WASM
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    runs-on: ubuntu-latest
    steps:
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 16.x
          registry-url: https://registry.npmjs.org/

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          override: true
          toolchain: stable
          target: wasm32-unknown-unknown

      - name: Checkout
        uses: actions/checkout@v2

      - name: Cache NPM Dependencies
        uses: actions/cache@v2
        with:
          path: node_modules
          key: npm-cache-${{ runner.os }}-${{ hashFiles('yarn.lock') }}

      - name: Cache cargo dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo
          key: cargo-deps-wasm-${{ runner.os }}-${{ hashFiles('Cargo.lock') }}

      - name: Cache cargo build
        uses: actions/cache@v2
        with:
          path: src/wasm/target
          key: cargo-build-wasm-${{ runner.os }}-${{ hashFiles('./src/wasm/Cargo.lock') }}

      - name: Install wasm-pack
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh

      - name: Install NPM Dependencies
        run: yarn install --frozen-lockfile --registry https://registry.npmjs.org --network-timeout 300000

      - name: Build WASM
        run: node scripts --wasm --set-dist-tag="${{ github.event.inputs.disttag }}"

      - name: Print WASM Dist Build
        run: ls -R dist-dev/@builder.io-qwik/bindings/

      - name: Upload WASM Build Artifacts
        uses: actions/upload-artifact@master
        with:
          name: dist-bindings-wasm
          path: dist-dev/@builder.io-qwik/bindings/*
          if-no-files-found: error

  ############ BUILD PLATFORM BINDINGS ############
  build-bindings:
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    strategy:
      fail-fast: false
      matrix:
        settings:
          - host: macos-latest
            target: x86_64-apple-darwin
            build: yarn build.platform

          - host: macos-latest
            target: aarch64-apple-darwin
            build: |
              export SDKROOT=$(xcrun -sdk macosx11.1 --show-sdk-path)
              export MACOSX_DEPLOYMENT_TARGET=$(xcrun -sdk macosx11.1 --show-sdk-platform-version)
              yarn build.platform --platform-target=aarch64-apple-darwin

          - host: windows-latest
            target: x86_64-pc-windows-msvc
            build: yarn build.platform

    name: Build ${{ matrix.settings.target }}
    runs-on: ${{ matrix.settings.host }}
    defaults:
      run:
        working-directory: ./src/napi/
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 16.x
          registry-url: https://registry.npmjs.org/

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          override: true
          toolchain: stable
          target: ${{ matrix.settings.target }}

      - name: Cache NPM Dependencies
        uses: actions/cache@v2
        with:
          path: node_modules
          key: npm-cache-${{ matrix.settings.target }}-${{ hashFiles('yarn.lock') }}

      - name: Pull Latest Image
        if: ${{ matrix.settings.docker }}
        run: ${{ matrix.settings.docker }}
        env:
          DOCKER_REGISTRY_URL: ghcr.io
          DOCKER_USERNAME: ${{ github.actor }}
          DOCKER_PASSWORD: ${{ secrets.GITHUB_TOKEN }}

      - name: Cache cargo dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo
          key: cargo-deps-${{ matrix.settings.target }}-${{ hashFiles('Cargo.lock') }}

      - name: Cache cargo build
        uses: actions/cache@v2
        with:
          path: target
          key: cargo-build-${{ matrix.settings.target }}-${{ hashFiles('Cargo.lock') }}

      - name: Setup Toolchain
        if: ${{ matrix.settings.setup }}
        run: ${{ matrix.settings.setup }}
        shell: bash

      - name: Install NPM Dependencies
        run: yarn install --frozen-lockfile --registry https://registry.npmjs.org --network-timeout 300000

      - name: Build Platform Binding
        run: ${{ matrix.settings.build }}
        shell: bash

      - name: Upload Platform Binding Artifact
        uses: actions/upload-artifact@v2
        with:
          name: dist-bindings-${{ matrix.settings.target }}
          path: dist-dev/@builder.io-qwik/bindings/*.node
          if-no-files-found: error

  ############ BUILD DISTRIBUTION ############
  build-distribution:
    name: Build Distribution
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    runs-on: ubuntu-latest
    needs:
      - build-package
      - build-wasm
      - build-bindings
      - test-unit
      - validate-rust

    steps:
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 16.x
          registry-url: https://registry.npmjs.org/

      - name: Create dist-dev/@builder.io-qwik directory
        run: |
          mkdir dist-dev/
          mkdir dist-dev/@builder.io-qwik/
          mkdir dist-dev/@builder.io-qwik/bindings/

      - name: Download Build Artifacts
        uses: actions/download-artifact@v2

      - name: Print Distribution Artifacts
        run: ls -R dist-dev-builder-io-qwik/

      - name: Move Distribution Artifacts
        run: mv dist-dev-builder-io-qwik/* dist-dev/@builder.io-qwik/

      - name: Print Bindings Artifacts
        run: ls -R dist-bindings-*/

      - name: Move Binding Artifacts
        run: mv dist-bindings-*/* dist-dev/@builder.io-qwik/bindings/

      - name: Print dist-dev
        run: ls -R dist-dev/

      - name: Upload Qwik Distribution Artifact
        if: ${{ always() }}
        uses: actions/upload-artifact@master
        with:
          name: builderio-qwik-distribution
          path: dist-dev/@builder.io-qwik/*
          if-no-files-found: error

  ############ RELEASE ############
  release:
    name: Release
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    runs-on: ubuntu-latest
    needs:
      - build-distribution
      - test-e2e

    steps:
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 16.x
          registry-url: https://registry.npmjs.org/

      - name: Checkout
        uses: actions/checkout@v2

      - name: Download Build Artifacts
        uses: actions/download-artifact@v2

      - name: Print Distribution Artifacts
        run: ls -R builderio-qwik-distribution/

      - name: Move Distribution Artifacts
        run: |
          mkdir dist-dev/
          mkdir dist-dev/@builder.io-qwik/
          mv builderio-qwik-distribution/* dist-dev/@builder.io-qwik/

      - name: Cache NPM Dependencies
        uses: actions/cache@v2
        with:
          path: node_modules
          key: npm-cache-${{ runner.os }}-${{ hashFiles('yarn.lock') }}

      - name: Install NPM Dependencies
        run: yarn install --frozen-lockfile --registry https://registry.npmjs.org --network-timeout 300000

      - name: Dry-Run Publish @builder.io/qwik
        if: ${{ github.event_name != 'workflow_dispatch' }}
        run: node scripts --set-dist-tag="${{ github.event.inputs.disttag }}" --release --dry-run
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish @builder.io/qwik
        if: ${{ github.event_name == 'workflow_dispatch' }}
        run: node scripts --set-dist-tag="${{ github.event.inputs.disttag }}" --release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  ############ E2E TEST ############
  test-e2e:
    name: E2E Tests
    strategy:
      fail-fast: false
      matrix:
        settings:
          - host: ubuntu-latest
            browser: chromium
            node: 16.x
          - host: macos-latest
            browser: webkit
            node: 14.x
          - host: windows-latest
            browser: firefox
            node: 12.x

    runs-on: ${{ matrix.settings.host }}
    needs:
      - build-distribution

    steps:
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.settings.node }}
          registry-url: https://registry.npmjs.org/

      - name: Checkout
        uses: actions/checkout@v2

      - name: Download Build Artifacts
        uses: actions/download-artifact@v2

      - name: Print Distribution Artifacts
        run: ls -R builderio-qwik-distribution/

      - name: Move Distribution Artifacts
        run: |
          mkdir dist-dev/
          mkdir dist-dev/@builder.io-qwik/
          mv builderio-qwik-distribution/* dist-dev/@builder.io-qwik/

      - name: Print Directory
        run: ls -R ./

      - name: Cache NPM Dependencies
        uses: actions/cache@v2
        with:
          path: node_modules
          key: npm-cache-${{ runner.os }}-node${{ matrix.settings.node }}-${{ hashFiles('yarn.lock') }}

      - name: Install NPM Dependencies
        run: yarn install --frozen-lockfile --registry https://registry.npmjs.org --network-timeout 300000

      - name: Install Playwright
        run: npx playwright install ${{ matrix.settings.browser }} && npx playwright install-deps ${{ matrix.settings.browser }}

      - name: Playwright E2E Tests
        run: yarn test.e2e.${{ matrix.settings.browser }}

  ############ UNIT TEST ############
  test-unit:
    name: Unit Tests
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    runs-on: ubuntu-latest
    steps:
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 16.x
          registry-url: https://registry.npmjs.org/

      - name: Checkout
        uses: actions/checkout@v2

      - name: Cache NPM Dependencies
        uses: actions/cache@v2
        with:
          path: node_modules
          key: npm-cache-${{ runner.os }}-${{ hashFiles('yarn.lock') }}

      - name: Install NPM Dependencies
        run: yarn install --frozen-lockfile --registry https://registry.npmjs.org --network-timeout 300000

      - name: Jest Unit Tests
        run: yarn test.unit

  ########### VALIDATE RUST ############
  validate-rust:
    name: Validate Rust
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
          components: rustfmt, clippy

      - name: Cache cargo dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo
          key: cargo-deps-${{ runner.os }}-${{ hashFiles('Cargo.lock') }}

      - name: Cache cargo build
        uses: actions/cache@v2
        with:
          path: target
          key: cargo-build-${{ runner.os }}-${{ hashFiles('Cargo.lock') }}

      - name: Format check
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: -- --check

      - name: Build check
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --all-features

      - name: Clippy check
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all-features

      - name: Unit tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all-features

  ########### LINT PACKAGE ############
  lint-package:
    name: Lint Package
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Cache NPM Dependencies
        uses: actions/cache@v2
        with:
          path: node_modules
          key: npm-cache-${{ runner.os }}-${{ hashFiles('yarn.lock') }}

      - name: Install NPM Dependencies
        run: yarn install --frozen-lockfile --registry https://registry.npmjs.org --network-timeout 300000

      - name: Prettier Check
        if: ${{ always() }}
        run: yarn lint.prettier

      - name: ESLint Check
        if: ${{ always() }}
        run: yarn lint.eslint
