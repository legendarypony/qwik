---
source: packages/qwik/src/optimizer/core/src/test.rs
expression: output
---
==INPUT==


import { component$, useClientMount$, useStore, useTask$ } from '@builder.io/qwik';
import mongo from 'mongodb';
import redis from 'redis';
import threejs from 'threejs';

export const Parent = component$(() => {
    const state = useStore({
        text: ''
    });

    // Double count watch
    useClientMount$(async () => {
        state.text = await mongo.users();
        redis.set(state.text);
    });

    useTask$(() => {
        // Code
    });

    return (
        <div onClick$={() => console.log('parent', state, threejs)}>
            {state.text}
        </div>
    );
});

============================= test.js ==

import { componentQrl } from "@builder.io/qwik";
import { useClientMountQrl } from "@builder.io/qwik";
import { _noopQrl } from "@builder.io/qwik";
import { useTaskQrl } from "@builder.io/qwik";
import { inlinedQrl } from "@builder.io/qwik";
import { _wrapSignal } from "@builder.io/qwik";
import { jsx as _jsx } from "@builder.io/qwik/jsx-runtime";
import { useStore } from '@builder.io/qwik';
export const Parent = /*#__PURE__*/ componentQrl(/*#__PURE__*/ inlinedQrl(()=>{
    const state = useStore({
        text: ''
    });
    // Double count watch
    useClientMountQrl(/*#__PURE__*/ _noopQrl("Parent_component_useClientMount_FX2jiJMePJA", [
        state
    ]));
    useTaskQrl(/*#__PURE__*/ inlinedQrl(()=>{
    // Code
    }, "Parent_component_useTask_gDH1EtUWqBU"));
    return /*#__PURE__*/ _jsx("div", {
        onClick$: /*#__PURE__*/ _noopQrl("Parent_component_div_onClick_C5XE49Nqd3A", [
            state
        ]),
        children: _wrapSignal(state, "text")
    }, "u6_0");
}, "Parent_component_0TaiDayHrlo"));


Some("{\"version\":3,\"sources\":[\"/user/qwik/src/test.tsx\"],\"names\":[],\"mappings\":\"AACA;;;;;;;AAAA,SAAsC,QAAQ,QAAkB,mBAAmB;AAKnF,OAAO,MAAM,uBAAS,sCAAW,IAAM;IACnC,MAAM,QAAQ,SAAS;QACnB,MAAM;IACV;IAEA,qBAAqB;IACrB;;;IAKA,oCAAS,IAAM;IACX,OAAO;IACX;IAEA,qBACI,KAAC;QAAI,QAAQ;;;8BACR;;AAGb,oCAAG\"}")
== DIAGNOSTICS ==

[]
