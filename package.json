{
  "name": "@builder.io/qwik",
  "version": "0.0.16-2",
  "description": "An Open-Source sub-framework designed with a focus on server-side-rendering, lazy-loading, and styling/animation.",
  "scripts": {
    "build": "node scripts --tsc --build --api --platform-binding --wasm",
    "build.platform": "node scripts --platform-binding",
    "build.wasm": "node scripts --wasm",
    "build.cli": "node scripts --cli --dev",
    "build.cli.prod": "node scripts --cli",
    "release.cli": "npm run build.cli.prod && cd dist-dev/create-qwik && npm publish",
    "cli": "npm run build.cli && node dist-dev/create-qwik/index.js",
    "build.watch": "node scripts --build --watch --dev --platform-binding",
    "api.update": "node scripts --tsc --api --dev",
    "tsc.check": "tsc --noEmit",
    "tsc.watch": "tsc --noEmit --watch --preserveWatchOutput",
    "start": "concurrently \"npm:build.watch\" \"npm:test.watch\" \"npm:tsc.watch\" -n build,test,tsc -c green,magenta,cyan",
    "release.prepare": "npm run lint && npm run test.unit && node scripts --tsc --build --api --platform-binding --wasm --prepare-release",
    "test": "npm run build && jest && npm run test.e2e",
    "test.unit": "jest",
    "test.rust": "make test",
    "test.watch": "jest --watch",
    "test.e2e": "start-server-and-test integration.server.prod http://localhost:8081 \"cypress run --config-file cypress/cypress.json\"",
    "test.e2e.open": "start-server-and-test integration.server.prod http://localhost:8081 \"cypress open --config-file cypress/cypress.json\"",
    "docs.sync": "node scripts/docs_sync",
    "jsx.types": "node scripts --jsx",
    "prepare": "husky install",
    "lint": "npm run lint.eslint && npm run lint.prettier && npm run lint.rust",
    "lint.eslint": "eslint \"**/*.ts*\"",
    "lint.rust": "make lint",
    "lint.prettier": "prettier --check .",
    "prettier.fix": "prettier --write .",
    "patch-m1": "npm run patch-m1-bazel && npm run patch-m1-ibazel && npm run patch-m1-buildifier",
    "patch-m1-bazel": "echo Patching Bazel for Apple M1 architecture compatibility && ln -fs ./bazelisk-darwin_amd64 node_modules/@bazel/bazelisk/bazelisk-darwin_arm64",
    "patch-m1-ibazel": "echo Patching iBazel for Apple M1 architecture compatibility && sed -i .bak \"s/'x64' : 'amd64',\\$/'x64' : 'amd64', 'arm64' : 'amd64',/\" ./node_modules/@bazel/ibazel/index.js",
    "patch-m1-buildifier": "echo Patching Buildifier for Apple M1 architecture compatibility && sed -i .bak \"s/'x64' : 'amd64',\\$/'x64' : 'amd64', 'arm64' : 'amd64',/\" ./node_modules/@bazel/buildifier/buildifier.js",
    "bazel:format": "find . -type f \\( -name \"*.bzl\" -or -name WORKSPACE -or -name BUILD -or -name BUILD.bazel \\) ! -path \"*/node_modules/*\" | xargs buildifier --warnings=attr-cfg,attr-license,attr-non-empty,attr-output-default,attr-single-file,constant-glob,ctx-actions,ctx-args,depset-iteration,depset-union,dict-concatenation,duplicated-name,filetype,git-repository,http-archive,integer-division,load,load-on-top,native-build,native-package,out-of-order-load,output-group,package-name,package-on-top,positional-args,redefined-variable,repository-name,same-origin-load,string-iteration,unsorted-dict-items,unused-variable",
    "bazel:lint": "npm run bazel:format -- --mode=check --lint=warn",
    "bazel:lint-fix": "npm run bazel:format -- --mode=fix --lint=fix",
    "link.dist": "cd dist-dev/@builder.io-qwik && npm link"
  },
  "devDependencies": {
    "@bazel/bazelisk": "^1.7.5",
    "@bazel/ibazel": "^0.15.10",
    "@bazel/typescript": "^3.5.0",
    "@microsoft/api-extractor": "^7.18.19",
    "@napi-rs/cli": "^1.3.5",
    "@napi-rs/triples": "^1.0.3",
    "@node-rs/helper": "^1.2.1",
    "@octokit/action": "^3.18.0",
    "@types/cross-spawn": "^6.0.2",
    "@types/execa": "^2.0.0",
    "@types/express": "^4.17.13",
    "@types/jest": "^26.0.23",
    "@types/mri": "^1.1.1",
    "@types/node": "^14.14.10",
    "@types/path-browserify": "^1.0.0",
    "@types/prompts": "^2.0.14",
    "@types/semver": "^7.3.9",
    "@types/source-map-support": "^0.5.3",
    "@typescript-eslint/eslint-plugin": "^4.19.0",
    "@typescript-eslint/parser": "^4.19.0",
    "concurrently": "^6.2.0",
    "cross-spawn": "^7.0.3",
    "cypress": "^7.7.0",
    "domino": "^2.1.6",
    "esbuild": "^0.12.13",
    "esbuild-register": "^2.6.0",
    "eslint": "^7.23.0",
    "eslint-plugin-no-only-tests": "^2.4.0",
    "execa": "^5.1.1",
    "express": "^4.17.1",
    "gzip-size": "^6.0.0",
    "husky": "^5.2.0",
    "jest": "^27.0.5",
    "kleur": "^4.1.4",
    "lint-staged": "^10.5.4",
    "mri": "^1.1.6",
    "path-browserify": "^1.0.1",
    "prettier": "2.3.0",
    "prompts": "^2.4.2",
    "rollup": "^2.52.2",
    "semver": "^7.3.5",
    "source-map-support": "^0.5.19",
    "start-server-and-test": "^1.12.6",
    "terser": "^5.7.1",
    "todomvc-app-css": "^2.3.0",
    "todomvc-common": "^1.0.5",
    "ts-jest": "^27.0.7",
    "typescript": "^4.5.2"
  },
  "files": [
    "bindings/qwik.darwin-x64.node",
    "bindings/qwik.darwin-arm64.node",
    "bindings/qwik.win32-x64-msvc.node",
    "bindings/qwik_wasm_bg.wasm",
    "bindings/qwik.wasm.cjs",
    "bindings/qwik.wasm.mjs",
    "core.cjs",
    "core.cjs.map",
    "core.min.mjs",
    "core.mjs",
    "core.mjs.map",
    "core.d.ts",
    "jsx-runtime.cjs",
    "jsx-runtime.cjs.map",
    "jsx-runtime.mjs",
    "jsx-runtime.mjs.map",
    "jsx-runtime.d.ts",
    "optimizer.cjs",
    "optimizer.mjs",
    "optimizer.d.ts",
    "prefetch.js",
    "prefetch.debug.js",
    "qwikloader.js",
    "qwikloader.debug.js",
    "qwikloader.optimize.js",
    "qwikloader.optimize.debug.js",
    "server/index.cjs",
    "server/index.mjs",
    "server/index.d.ts",
    "server/package.json",
    "testing/index.cjs",
    "testing/index.mjs",
    "testing/index.d.ts",
    "testing/package.json"
  ],
  "contributors": [
    {
      "name": "MiÅ¡ko Hevery",
      "email": "misko@hevery.com",
      "url": "https://github.com/BuilderIO/qwik"
    },
    {
      "name": "Adam Bradley",
      "email": "adam@builder.io",
      "url": "https://twitter.com/adamdbradley"
    },
    {
      "name": "Manu Mtz.-Almeida",
      "email": "manu@builder.io",
      "url": "https://twitter.com/manucorporat"
    }
  ],
  "main": "index.js",
  "@comment type": "Setting type to 'commonjs' is important as many of the bazel tooling assumes 'commonjs'. For code which wants ESM a second 'package.json' file needs to be created for just those files.",
  "type": "commonjs",
  "license": "MIT",
  "homepage": "https://github.com/BuilderIO/qwik#readme",
  "repository": {
    "type": "git",
    "url": "https://github.com/BuilderIO/qwik.git"
  },
  "bugs": {
    "url": "https://github.com/BuilderIO/qwik/issues"
  },
  "keywords": [
    "ssr",
    "server-side-render",
    "prerender",
    "ssg",
    "static-site-generator",
    "static-site",
    "generator",
    "website",
    "webapp",
    "framework",
    "Builder.io"
  ],
  "engines": {
    "node": ">=10"
  },
  "jest": {
    "preset": "ts-jest",
    "moduleFileExtensions": [
      "ts",
      "tsx",
      "js",
      "mjs",
      "jsx",
      "json",
      "d.ts"
    ],
    "moduleNameMapper": {
      "^@builder.io/qwik/jsx-runtime$": "<rootDir>/src/jsx-runtime.ts",
      "^@builder.io/qwik/optimizer$": "<rootDir>/src/optimizer/index.ts",
      "^@builder.io/qwik/server$": "<rootDir>/src/server/index.ts",
      "^@builder.io/qwik/testing$": "<rootDir>/src/testing/index.ts",
      "^@builder.io/qwik$": "<rootDir>/src/core/index.ts"
    },
    "modulePathIgnorePatterns": [
      "<rootDir>/bazel-out",
      "<rootDir>/dist",
      "<rootDir>/dist-dev",
      "<rootDir>/integration",
      "<rootDir>/node_modules",
      "<rootDir>/src/optimizer/core/src/snapshots/",
      "<rootDir>/target"
    ],
    "testPathIgnorePatterns": [
      "<rootDir>/.github/",
      "<rootDir>/.husky/",
      "<rootDir>/.vscode/",
      "<rootDir>/bazel-out",
      "<rootDir>/bin/",
      "<rootDir>/cypress/",
      "<rootDir>/dist/",
      "<rootDir>/dist-dev/",
      "<rootDir>/docs/",
      "<rootDir>/integration/",
      "<rootDir>/node_modules/",
      "<rootDir>/target/"
    ],
    "testRegex": "/(scripts|src)/.*\\.unit\\.(ts|tsx)$"
  },
  "lint-staged": {
    "*.*": [
      "prettier --write --ignore-unknown"
    ],
    "*.ts": [
      "npx eslint"
    ]
  }
}
