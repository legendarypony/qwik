---
source: src/optimizer/core/src/test.rs
expression: output
---
==INPUT==


import { $, component$, h, Fragment } from '@builder.io/qwik';

export const Lightweight = (props) => {
    return (
        <div>
            <>
                <div/>
                <button {...props}/>
            </>
        </div>
    )
};

export const Foo = component$((props) => {
    return $(() => {
        return (
            <div>
                <>
                    <div class="class"/>
                    <div class="class"></div>
                    <div class="class">12</div>
                </>
                <div class="class">
                    <Lightweight {...props}/>
                </div>
                <div class="class">
                    <div/>
                    <div/>
                    <div/>
                </div>
                <div class="class">
                    {children}
                </div>
            </div>
        )
    });
}, {
    tagName: "my-foo",
});

============================= test.js ==

import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from "@builder.io/qwik/jsx-runtime";
import * as qwik from "@builder.io/qwik";
import { component } from "@builder.io/qwik";
export const Lightweight = (props)=>{
    return /*#__PURE__*/ _jsx("div", {
        children: /*#__PURE__*/ _jsxs(_Fragment, {
            children: [
                /*#__PURE__*/ _jsx("div", {}),
                /*#__PURE__*/ _jsx("button", {
                    ...props
                })
            ]
        })
    });
};
export const Foo = /*#__PURE__*/ component(qwik.qrl(()=>import("./h_test_foo_onmount")
, "Foo_onmount"), {
    tagName: "my-foo"
});

============================= h_test_foo_onrender.js (ENTRY POINT)==

import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from "@builder.io/qwik/jsx-runtime";
import * as qwik from "@builder.io/qwik";
import { Lightweight } from "./test";
import { h } from "@builder.io/qwik";
import { Fragment } from "@builder.io/qwik";
export const Foo_onRender = ()=>{
    const [props] = qwik.useLexicalScope();
    return /*#__PURE__*/ _jsxs("div", {
        children: [
            /*#__PURE__*/ _jsxs(_Fragment, {
                children: [
                    /*#__PURE__*/ _jsx("div", {
                        class: "class"
                    }),
                    /*#__PURE__*/ _jsx("div", {
                        class: "class"
                    }),
                    /*#__PURE__*/ _jsx("div", {
                        class: "class",
                        children: "12"
                    })
                ]
            }),
            /*#__PURE__*/ _jsx("div", {
                class: "class",
                children: /*#__PURE__*/ _jsx(Lightweight, {
                    ...props
                })
            }),
            /*#__PURE__*/ _jsxs("div", {
                class: "class",
                children: [
                    /*#__PURE__*/ _jsx("div", {}),
                    /*#__PURE__*/ _jsx("div", {}),
                    /*#__PURE__*/ _jsx("div", {})
                ]
            }),
            /*#__PURE__*/ _jsx("div", {
                class: "class",
                children: children
            })
        ]
    });
};

/*
{
  "origin": "test.tsx",
  "name": "Foo_onRender",
  "entry": null,
  "canonicalFilename": "h_test_foo_onrender",
  "extension": "js"
}
*/
============================= h_test_foo_onmount.js (ENTRY POINT)==

import * as qwik from "@builder.io/qwik";
export const Foo_onmount = (props)=>{
    return qwik.qrl(()=>import("./h_test_foo_onrender")
    , "Foo_onRender", [
        props
    ]);
};

/*
{
  "origin": "test.tsx",
  "name": "Foo_onmount",
  "entry": null,
  "canonicalFilename": "h_test_foo_onmount",
  "extension": "js"
}
*/
== DIAGNOSTICS ==

[]
