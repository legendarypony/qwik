---
source: src/optimizer/core/src/test.rs
expression: output
---
==INPUT==


import { $, component$ } from '@builder.io/qwik';

export const Foo = component$(({color}) => {
    return $(() => {
        return (
            <div>
                <Button {...props} />
                <ButtonArrow {...props} />
            </div>
        )
    });
}, {
    tagName: "my-foo",
});

export function Button({text, color}) {
    return (
        <button color={color} on$:click={()=>console.log(text, color)}>{text}</button>
    );
}

export const ButtonArrow = ({text, color}) => {
    return (
        <button color={color} on$:click={()=>console.log(text, color)}>{text}</button>
    );
}

============================= test.tsx ==

import * as qwik from "@builder.io/qwik";
import { componentFromQrl } from "@builder.io/qwik";
export const Foo = /*#__PURE__*/ componentFromQrl(qwik.qrl(()=>import("./h_test_foo_onmount")
, "Foo_onmount"), {
    tagName: "my-foo"
});
export function Button({ text , color  }) {
    return <button color={color} on:click={qwik.qrl(()=>import("./h_test_button_button_onclick")
    , "Button_button_onclick", [
        color,
        text
    ])}>{text}</button>;
}
export const ButtonArrow = ({ text , color  })=>{
    return <button color={color} on:click={qwik.qrl(()=>import("./h_test_buttonarrow_button_onclick")
    , "ButtonArrow_button_onclick", [
        color,
        text
    ])}>{text}</button>;
};

============================= h_test_foo_onrender.tsx (ENTRY POINT)==

import * as qwik from "@builder.io/qwik";
import { Button } from "./test";
import { ButtonArrow } from "./test";
export const Foo_onRender = ()=>{
    return <div >

                <Button {...props}/>

                <ButtonArrow {...props}/>

            </div>;
};

/*
{
  "origin": "test.tsx",
  "name": "Foo_onRender",
  "entry": null,
  "canonicalFilename": "h_test_foo_onrender",
  "extension": "tsx"
}
*/
============================= h_test_foo_onmount.tsx (ENTRY POINT)==

import * as qwik from "@builder.io/qwik";
export const Foo_onmount = ({ color  })=>{
    return qwik.qrl(()=>import("./h_test_foo_onrender")
    , "Foo_onRender");
};

/*
{
  "origin": "test.tsx",
  "name": "Foo_onmount",
  "entry": null,
  "canonicalFilename": "h_test_foo_onmount",
  "extension": "tsx"
}
*/
============================= h_test_button_button_onclick.tsx (ENTRY POINT)==

import * as qwik from "@builder.io/qwik";
export const Button_button_onclick = ()=>{
    const [color, text] = qwik.useLexicalScope();
    return console.log(text, color);
};

/*
{
  "origin": "test.tsx",
  "name": "Button_button_onclick",
  "entry": null,
  "canonicalFilename": "h_test_button_button_onclick",
  "extension": "tsx"
}
*/
============================= h_test_buttonarrow_button_onclick.tsx (ENTRY POINT)==

import * as qwik from "@builder.io/qwik";
export const ButtonArrow_button_onclick = ()=>{
    const [color, text] = qwik.useLexicalScope();
    return console.log(text, color);
};

/*
{
  "origin": "test.tsx",
  "name": "ButtonArrow_button_onclick",
  "entry": null,
  "canonicalFilename": "h_test_buttonarrow_button_onclick",
  "extension": "tsx"
}
*/
== DIAGNOSTICS ==

[]
