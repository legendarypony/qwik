---
source: src/optimizer/core/src/test.rs
assertion_line: 919
expression: output

---
==INPUT==


        import { $, qComponent$, onRender$ } from '@builder.io/qwik';
        const Header = qComponent$(() => {
            const thing = useStore();
            const {foo, bar} = foo();

            onRender$(() => {
                return (
                    <div>{thing}</div>
                );
            });
        });
    
============================= test.tsx ==

import * as qwik from "@builder.io/qwik";
import { qComponent } from "@builder.io/qwik";
import { $, qComponent$, onRender$ } from '@builder.io/qwik';
const Header = /*#__PURE__*/ qComponent(qwik.qrl(()=>import("./h_test_header_onmount")
, "Header_onmount"));

============================= h_test_header_onrender.tsx (ENTRY POINT)==

import * as qwik from "@builder.io/qwik";
export const Header_onRender = ()=>{
    const [thing] = qwik.useLexicalScope();
    return <div >{thing}</div>;
};

============================= h_test_header_onmount.tsx (ENTRY POINT)==

import * as qwik from "@builder.io/qwik";
import { onRender } from "@builder.io/qwik";
export const Header_onmount = ()=>{
    const thing = useStore();
    const { foo , bar  } = foo();
    onRender(qwik.qrl(()=>import("./h_test_header_onrender")
    , "Header_onRender", [
        thing
    ]));
};

== HOOKS ==

[
  {
    "origin": "test.tsx",
    "name": "Header_onRender",
    "entry": null,
    "canonicalFilename": "h_test_header_onrender"
  },
  {
    "origin": "test.tsx",
    "name": "Header_onmount",
    "entry": null,
    "canonicalFilename": "h_test_header_onmount"
  }
]

== DIAGNOSTICS ==

[]
