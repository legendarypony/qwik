---
source: src/optimizer/core/src/test.rs
assertion_line: 919
expression: output

---
==INPUT==


import { $, qComponent$, onRender$ } from '@builder.io/qwik';

export const Foo = qComponent$(({foo}) => {
    const arg0 = 20;
    return onRender$(() => {
        const fn = ({aaa}) => aaa;
        return (
            <div>
              {foo}{fn()}{arg0}
            </div>
        )
    });
})

export const Bar = qComponent$(({bar}) => {
    return onRender$(() => {
        return (
            <div>
              {bar}
            </div>
        )
    });
})

    
============================= test.tsx ==

import * as qwik from "@builder.io/qwik";
import { qComponent } from "@builder.io/qwik";
export const Foo = /*#__PURE__*/ qComponent(qwik.qrl(()=>import("./h_test_foo_onmount")
, "Foo_onmount"));
export const Bar = /*#__PURE__*/ qComponent(qwik.qrl(()=>import("./h_test_bar_onmount")
, "Bar_onmount"));

============================= h_test_foo_onrender.tsx (ENTRY POINT)==

import * as qwik from "@builder.io/qwik";
export const Foo_onRender = ()=>{
    const [arg0, foo] = qwik.useLexicalScope();
    const fn = ({ aaa  })=>aaa
    ;
    return <div >

              {foo}{fn()}{arg0}

            </div>;
};

============================= h_test_foo_onmount.tsx (ENTRY POINT)==

import * as qwik from "@builder.io/qwik";
import { onRender } from "@builder.io/qwik";
export const Foo_onmount = ({ foo  })=>{
    const arg0 = 20;
    return onRender(qwik.qrl(()=>import("./h_test_foo_onrender")
    , "Foo_onRender", [
        arg0,
        foo
    ]));
};

============================= h_test_bar_onrender.tsx (ENTRY POINT)==

import * as qwik from "@builder.io/qwik";
export const Bar_onRender = ()=>{
    const [bar] = qwik.useLexicalScope();
    return <div >

              {bar}

            </div>;
};

============================= h_test_bar_onmount.tsx (ENTRY POINT)==

import * as qwik from "@builder.io/qwik";
import { onRender } from "@builder.io/qwik";
export const Bar_onmount = ({ bar  })=>{
    return onRender(qwik.qrl(()=>import("./h_test_bar_onrender")
    , "Bar_onRender", [
        bar
    ]));
};

== HOOKS ==

[
  {
    "origin": "test.tsx",
    "name": "Foo_onRender",
    "entry": null,
    "canonicalFilename": "h_test_foo_onrender"
  },
  {
    "origin": "test.tsx",
    "name": "Foo_onmount",
    "entry": null,
    "canonicalFilename": "h_test_foo_onmount"
  },
  {
    "origin": "test.tsx",
    "name": "Bar_onRender",
    "entry": null,
    "canonicalFilename": "h_test_bar_onrender"
  },
  {
    "origin": "test.tsx",
    "name": "Bar_onmount",
    "entry": null,
    "canonicalFilename": "h_test_bar_onmount"
  }
]

== DIAGNOSTICS ==

[]
