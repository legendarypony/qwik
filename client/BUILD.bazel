package(default_visibility = ["//visibility:public"])

load("@build_bazel_rules_nodejs//:index.bzl", "js_library")
load("@npm//@bazel/typescript:index.bzl", "ts_project")
load("@npm//@bazel/rollup:index.bzl", "rollup_bundle")
load("@npm//@bazel/terser:index.bzl", "terser_minified")

js_library(
    name = "client",
    package_name = "qoot",
    srcs = ["package.json"],
    deps = [
        ":project",
    ],
)

ts_project(
    name = "project",
    tsconfig = "//:tsconfig",
    declaration = True,
    srcs = glob(["**/*.ts"], exclude=["qootloader.ts", "**/*.unit.ts", "CONFIG.ts"]),
    deps = [
        "//client/component",
        "//client/config",
        "//client/event",
        "//client/import",
        "//client/injection",
        "//client/render/jsx",
        "//client/service",
    ]
)

ts_project(
    name = "CONFIG",
    tsconfig = "//:tsconfig",
    declaration = True,
    srcs = [ "CONFIG.ts"],
    deps = [ ":client" ]
)

rollup_bundle(
    name = "bundle",
    entry_point = "qoot.js",
    config_file = "//:rollup.config.js",
    deps = [":client"],
)

terser_minified(
    name = "bundle.min",
    src = "bundle.js",
    config_file = "//:terser.config.json",
    sourcemap = False,
    terser_bin = "@npm//terser/bin:terser"
)

ts_project(
    name = "loader",
    tsconfig = "//:tsconfig",
    declaration = True,
    srcs = ["qootloader.ts"],
)

terser_minified(
    name = "loader.min",
    src = "qootloader.js",
    config_file = "//:terser.config.json",
    sourcemap = False,
    terser_bin = "@npm//terser/bin:terser"
)
